import sys
from org.apache.nifi.processor.io import InputStreamCallback
from org.apache.nifi.flowfile import FlowFile
from java.io import InputStream, OutputStream
import traceback

# Função de callback para ler o conteúdo do FlowFile
class ErrorCallback(InputStreamCallback):
    def __init__(self, flowFile, session):
        self.flowFile = flowFile
        self.session = session

    def process(self, inputStream):
        try:
            # Lê o conteúdo do FlowFile (erro ou qualquer mensagem gerada)
            error_message = str(inputStream.read())  # Pode ser um erro gerado por SQL ou outro

            # Verifica se a mensagem de erro foi gerada
            if error_message:
                # Registra a mensagem de erro em um atributo
                self.session.putAttribute(self.flowFile, "error.description", error_message.strip())

        except Exception as e:
            # Caso ocorra um erro ao processar o conteúdo, loga o erro
            self.session.putAttribute(self.flowFile, "error.description", str(e))
            traceback.print_exc()

# Obtém o FlowFile da sessão
flowFile = session.get()

if flowFile is not None:
    # Chama a função de callback para processar o FlowFile
    callback = ErrorCallback(flowFile, session)
    session.read(flowFile, callback)

    # Transferir o FlowFile de volta à relação de sucesso ou falha
    session.transfer(flowFile, REL_SUCCESS)  # Ou REL_FAILURE se falhar

